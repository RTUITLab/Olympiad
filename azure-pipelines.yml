trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

name: $(BuildID)-$(Build.SourceBranchName)

variables:
  ${{ if notIn(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/tags/develop') }}:
    buildImage: false
    deployService: false
    deployEnvironment: 'no'
    imageTags: 'no'
    proxyServiceName: 'no'
  ${{ if eq(variables['Build.SourceBranch'], 'refs/tags/develop') }}:
    buildImage: true
    deployService: true
    deployEnvironment: development
    imageTags: |
      $(Build.BuildId)
      develop
    proxyServiceName: olympiad-dev_proxy
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    proxyServiceName: olympiad_proxy

stages:
- stage: build
  condition: and(succeeded(), ${{variables.buildImage}})
  jobs:
    - job: packProxy
      displayName: Pack docker image
      steps:
        - task: Docker@2
          displayName: buildAndPush
          inputs:
            containerRegistry: 'rtuitlab connection by admin'
            repository: 'rtuitlab/olympiad-proxy'
            command: 'buildAndPush'
            Dockerfile: './Proxy/Dockerfile'
            buildContext: './Proxy'
            tags: ${{variables.imageTags}}
# - stage: deploy
#   condition: and(succeeded(), ${{variables.deployService}})
#   jobs:
#     - deployment: DeployProxy
#       displayName: Deploy proxy
#       pool:
#         vmImage: 'ubuntu-latest'
#       environment: ${{variables.deployEnvironment}}
#       strategy:
#         runOnce:
#           on:
#             failure:
#               steps:
#                 - download: none
#                 - task: SSH@0
#                   inputs:
#                     sshEndpoint: 'swarm manager'
#                     runOptions: 'commands'
#                     commands: 'docker service rollback ${{variables.proxyServiceName}}'
#                     readyTimeout: '20000'
#           deploy:
#             steps:
#               - download: none
#               - task: SSH@0
#                 inputs:
#                   sshEndpoint: 'swarm manager'
#                   runOptions: 'commands'
#                   commands: 'docker service update --image rtuitlab/olympiad-proxy:$(Build.BuildId) ${{variables.proxyServiceName}}'
#                   readyTimeout: '20000'
